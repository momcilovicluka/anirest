{
	"info": {
		"_postman_id": "abd71715-5aad-4eba-9cd5-f6dff30ac14f",
		"name": "anirest",
		"description": "Anirest is a Spring Boot based REST microservice application that allows users to register, see info about anime, create their lists, and add anime to lists",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32372801",
		"_collection_link": "https://www.postman.com/lukamomcilovic/workspace/anirest/collection/32372801-abd71715-5aad-4eba-9cd5-f6dff30ac14f?action=share&source=collection_link&creator=32372801"
	},
	"item": [
		{
			"name": "register",
			"item": [
				{
					"name": "user/register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 409\", function () {",
									"  pm.response.to.have.status(409);",
									"});",
									"",
									"",
									"pm.test(\"Response has required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.message).to.exist;",
									"    pm.expect(responseData.user).to.exist;",
									"    pm.expect(responseData.repoUser).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"User ID should be a non-zero integer\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.user.idUser).to.be.a('number');",
									"    pm.expect(responseData.user.idUser).to.be.above(0, \"User ID should be non-zero\");",
									"});",
									"",
									"",
									"pm.test(\"Email is in a valid format\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.user.email).to.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);",
									"});",
									"",
									"",
									"pm.test(\"Role is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.user.role).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Role should not be empty\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Dalibor\",\n  \"surname\": \"Stakić\",\n  \"username\": \"stako\",\n  \"email\": \"daliborstakic@gmail.com\",\n  \"password\": \"Čačak država\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8765/user/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8765",
							"path": [
								"user",
								"register"
							]
						},
						"description": "Allows user to register by entering information. Validation is performed to check for the correctness of information provided"
					},
					"response": [
						{
							"name": "Empty",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8765/user/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8765",
									"path": [
										"user",
										"register"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "user/register",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Dalibor\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8765/user/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8765",
									"path": [
										"user",
										"register"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Name, Surname",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Dalibor\",\n  \"surname\": \"Stakić\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8765/user/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8765",
									"path": [
										"user",
										"register"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Name, Surname, Email",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Dalibor\",\n  \"surname\": \"Stakić\",\n  \"email\": \"daliborstakic@gmail.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8765/user/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8765",
									"path": [
										"user",
										"register"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Empty Username",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Dalibor\",\n  \"surname\": \"Stakić\",\n  \"email\": \"daliborstakic@gmail.com\",\n  \"username\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8765/user/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8765",
									"path": [
										"user",
										"register"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "All, Invalid Password",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Dalibor\",\n  \"surname\": \"Stakić\",\n  \"username\": \"stako\",\n  \"email\": \"daliborstakic@gmail.com\",\n  \"password\": \"Čačak\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8765/user/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8765",
									"path": [
										"user",
										"register"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "All",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Dalibor\",\n  \"surname\": \"Stakić\",\n  \"username\": \"stako\",\n  \"email\": \"daliborstakic@gmail.com\",\n  \"password\": \"Čačak država\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8765/user/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8765",
									"path": [
										"user",
										"register"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "user/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response status code is 200', function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"})",
									"",
									"pm.test('Email is in a valid format', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData.email).to.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Email is not in a valid format');",
									"})",
									"",
									"pm.test('Username is a non-empty string', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData.username).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, 'Username should not be empty');",
									"})",
									"",
									"pm.test('Role is one of the expected values', function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.role).to.exist.and.to.be.oneOf([",
									"        'admin',",
									"        'user',",
									"\t\t'USER'",
									"    ]);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"baldojsa\",\n  \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8765/user/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8765",
							"path": [
								"user",
								"login"
							]
						},
						"description": "Login call returns info about user"
					},
					"response": [
						{
							"name": "Short password",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"baldojsa\",\n  \"password\": \"pass\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8765/user/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8765",
									"path": [
										"user",
										"login"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Wrong password",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"baldojsa\",\n  \"password\": \"wrongpassword\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8765/user/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8765",
									"path": [
										"user",
										"login"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "auth/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required field 'accessToken'\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.accessToken).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Access token should not be empty\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.accessToken).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Access token should be a string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.accessToken).to.be.a('string');",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"baldojsa\",\n  \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8765/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8765",
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Generates and returns a token that shall be used for using other calls that require authorisation"
					},
					"response": [
						{
							"name": "Short password",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"baldojsa\",\n  \"password\": \"pass\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8765/user/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8765",
									"path": [
										"user",
										"login"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "user/login",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"baldojsa\",\n  \"password\": \"wrongpassword\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8765/user/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8765",
									"path": [
										"user",
										"login"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"description": "API calls related to user interactions such as login, reigister, and authentification"
		},
		{
			"name": "anime",
			"item": [
				{
					"name": "anime/{name}-auth",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZXhwIjoxNzA2OTAwMDI0LCJ1c2VybmFtZSI6ImJhbGRvanNhIiwiYXV0aG9yaXRpZXMiOlsiVVNFUiJdfQ.yFIuOxBr1RotdkHPcZ0ntBJ6-0lJ7FtBjI8cdUpBEmE",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8765/anime/misfit of demon king academy",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8765",
							"path": [
								"anime",
								"misfit of demon king academy"
							]
						},
						"description": "Returns info about anime by provided name.\n\nFirst checks if there is such anime in the database, if not then returns info from anilist graphql api"
					},
					"response": []
				},
				{
					"name": "anime/{name}-noauth",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8765/anime/misfit of demon king academy",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8765",
							"path": [
								"anime",
								"misfit of demon king academy"
							]
						}
					},
					"response": []
				},
				{
					"name": "anime/{name}-invalid-auth",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "ayJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZXhwIjoxNzA1NzYxNDgxLCJ1c2VybmFtZSI6ImJhbGRvanNhIiwiYXV0aG9yaXRpZXMiOlsiVVNFUiJdfQ.vcmFlYWjE7wkvwUoW7FhDbJ0JfuZeHEmfH1MZmalOdY",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8765/anime/misfit of demon king academy",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8765",
							"path": [
								"anime",
								"misfit of demon king academy"
							]
						}
					},
					"response": []
				},
				{
					"name": "anime/addAnime",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"misfit of demon king academy\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:1337/anime/addAnime",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"anime",
								"addAnime"
							]
						},
						"description": "Adds anime to database by fetching info from anilist graphql api"
					},
					"response": []
				}
			]
		},
		{
			"name": "anime-list",
			"item": [
				{
					"name": "anime-list/create",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZXhwIjoxNzA2OTAwMDI0LCJ1c2VybmFtZSI6ImJhbGRvanNhIiwiYXV0aG9yaXRpZXMiOlsiVVNFUiJdfQ.yFIuOxBr1RotdkHPcZ0ntBJ6-0lJ7FtBjI8cdUpBEmE",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Bald lista\",\n  \"description\": \"Lista gde su likovi celavi\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8765/anime-list/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8765",
							"path": [
								"anime-list",
								"create"
							]
						},
						"description": "Create a list"
					},
					"response": []
				},
				{
					"name": "anime-list/lists",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZXhwIjoxNzA2OTAwMDI0LCJ1c2VybmFtZSI6ImJhbGRvanNhIiwiYXV0aG9yaXRpZXMiOlsiVVNFUiJdfQ.yFIuOxBr1RotdkHPcZ0ntBJ6-0lJ7FtBjI8cdUpBEmE",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8765/anime-list/lists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8765",
							"path": [
								"anime-list",
								"lists"
							]
						},
						"description": "Returns users lists"
					},
					"response": []
				},
				{
					"name": "anime-list/addToList",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZXhwIjoxNzA1NzYxNDgxLCJ1c2VybmFtZSI6ImJhbGRvanNhIiwiYXV0aG9yaXRpZXMiOlsiVVNFUiJdfQ.vcmFlYWjE7wkvwUoW7FhDbJ0JfuZeHEmfH1MZmalOdY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"listId\": 3,\n  \"animeId\": 21087\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8765/anime-list/addToList",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8765",
							"path": [
								"anime-list",
								"addToList"
							]
						},
						"description": "Add anime to list by providing ids"
					},
					"response": []
				}
			]
		},
		{
			"name": "tag",
			"item": [
				{
					"name": "tags/all",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8765/tags/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8765",
							"path": [
								"tags",
								"all"
							]
						},
						"description": "Lists all tags"
					},
					"response": []
				},
				{
					"name": "tags/page/{page}",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8765/tags/page/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8765",
							"path": [
								"tags",
								"page",
								"1"
							]
						},
						"description": "Lists 10 tags by page"
					},
					"response": []
				}
			],
			"description": "Information about tags"
		}
	]
}